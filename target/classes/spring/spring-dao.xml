<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop.xsd">
 
	 <!-- 自动扫描 -->  
    <context:component-scan base-package="com.songzhi.carInsure" />
  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driverClassName}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${maxWait}"></property>  
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- mybatis配置文件 --> 
        <property name="configLocation" value="classpath:spring/mybatis-config.xml"></property> 
        
        <!-- 自动扫描mapping.xml文件 --> 
        <property name="mapperLocations" value="classpath*:sqlmapper/*.xml"></property> 
        
        <!--配置别名所在的包-->
        <!--
        <property name="typeAliasesPackage" value="com.songzhi.carInsure.web.po"/>
		-->
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        
        <!-- 这里的basePackage 指定了dao层接口路劲，这里的dao接口不用自己实现 -->  
        <property name="basePackage" value="com.songzhi.carInsure.*.dao,com.songzhi.carInsure.*.*.dao;com.songzhi.carInsure.*.*.*.dao;" />  
        
        <!-- 如果只有一个数据源的话可以不用指定，但是如果有多个数据源的话必须要指定 -->  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        
        <!-- 
        <property name="annotationClass"  value="org.springframework.stereotype.Repository" />
        -->  
        
        <!--直接指定了sqlsessionTemplate名称，这个和上面的其实是一样的 -->  
        <!-- <property name="sqlSessionTemplateBeanName" value="sqlSession" /> -->        
    </bean>
    
</beans>