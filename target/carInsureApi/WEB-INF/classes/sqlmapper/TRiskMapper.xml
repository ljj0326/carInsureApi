<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.songzhi.carInsure.web.dao.TRiskMapper" >
  <resultMap id="BaseResultMap" type="com.songzhi.carInsure.web.po.TRisk" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="risk_code" property="riskCode" jdbcType="VARCHAR" />
    <result column="risk_name" property="riskName" jdbcType="VARCHAR" />
    <result column="insurance_amount" property="insuranceAmount" jdbcType="DOUBLE" />
    <result column="insurance_money" property="insuranceMoney" jdbcType="DOUBLE" />
    <result column="glass_code" property="glassCode" jdbcType="VARCHAR" />
    <result column="glass_category" property="glassCategory" jdbcType="VARCHAR" />
    <result column="seat_num" property="seatNum" jdbcType="INTEGER" />
    <result column="compensate_day" property="compensateDay" jdbcType="INTEGER" />
    <result column="compensate_moeny" property="compensateMoeny" jdbcType="DOUBLE" />
    <result column="chinese_other" property="chineseOther" jdbcType="INTEGER" />
    <result column="repair_num" property="repairNum" jdbcType="DOUBLE" />
    <result column="n_seq_no" property="nSeqNo" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, risk_code, risk_name, insurance_amount, insurance_money, glass_code, 
    glass_category, seat_num, compensate_day, compensate_moeny, chinese_other, repair_num, 
    n_seq_no
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.songzhi.carInsure.web.po.TRiskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_risk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_risk
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_risk
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.songzhi.carInsure.web.po.TRiskExample" >
    delete from t_risk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.songzhi.carInsure.web.po.TRisk" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_risk (order_id, risk_code, risk_name, 
      insurance_amount, insurance_money, glass_code, 
      glass_category, seat_num, compensate_day, 
      compensate_moeny, chinese_other, repair_num, 
      n_seq_no)
    values (#{orderId,jdbcType=INTEGER}, #{riskCode,jdbcType=VARCHAR}, #{riskName,jdbcType=VARCHAR}, 
      #{insuranceAmount,jdbcType=DOUBLE}, #{insuranceMoney,jdbcType=DOUBLE}, #{glassCode,jdbcType=VARCHAR}, 
      #{glassCategory,jdbcType=VARCHAR}, #{seatNum,jdbcType=INTEGER}, #{compensateDay,jdbcType=INTEGER}, 
      #{compensateMoeny,jdbcType=DOUBLE}, #{chineseOther,jdbcType=INTEGER}, #{repairNum,jdbcType=DOUBLE}, 
      #{nSeqNo,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.songzhi.carInsure.web.po.TRisk" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_risk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="riskCode != null" >
        risk_code,
      </if>
      <if test="riskName != null" >
        risk_name,
      </if>
      <if test="insuranceAmount != null" >
        insurance_amount,
      </if>
      <if test="insuranceMoney != null" >
        insurance_money,
      </if>
      <if test="glassCode != null" >
        glass_code,
      </if>
      <if test="glassCategory != null" >
        glass_category,
      </if>
      <if test="seatNum != null" >
        seat_num,
      </if>
      <if test="compensateDay != null" >
        compensate_day,
      </if>
      <if test="compensateMoeny != null" >
        compensate_moeny,
      </if>
      <if test="chineseOther != null" >
        chinese_other,
      </if>
      <if test="repairNum != null" >
        repair_num,
      </if>
      <if test="nSeqNo != null" >
        n_seq_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="riskCode != null" >
        #{riskCode,jdbcType=VARCHAR},
      </if>
      <if test="riskName != null" >
        #{riskName,jdbcType=VARCHAR},
      </if>
      <if test="insuranceAmount != null" >
        #{insuranceAmount,jdbcType=DOUBLE},
      </if>
      <if test="insuranceMoney != null" >
        #{insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="glassCode != null" >
        #{glassCode,jdbcType=VARCHAR},
      </if>
      <if test="glassCategory != null" >
        #{glassCategory,jdbcType=VARCHAR},
      </if>
      <if test="seatNum != null" >
        #{seatNum,jdbcType=INTEGER},
      </if>
      <if test="compensateDay != null" >
        #{compensateDay,jdbcType=INTEGER},
      </if>
      <if test="compensateMoeny != null" >
        #{compensateMoeny,jdbcType=DOUBLE},
      </if>
      <if test="chineseOther != null" >
        #{chineseOther,jdbcType=INTEGER},
      </if>
      <if test="repairNum != null" >
        #{repairNum,jdbcType=DOUBLE},
      </if>
      <if test="nSeqNo != null" >
        #{nSeqNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.songzhi.carInsure.web.po.TRiskExample" resultType="java.lang.Integer" >
    select count(*) from t_risk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_risk
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.riskCode != null" >
        risk_code = #{record.riskCode,jdbcType=VARCHAR},
      </if>
      <if test="record.riskName != null" >
        risk_name = #{record.riskName,jdbcType=VARCHAR},
      </if>
      <if test="record.insuranceAmount != null" >
        insurance_amount = #{record.insuranceAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.insuranceMoney != null" >
        insurance_money = #{record.insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.glassCode != null" >
        glass_code = #{record.glassCode,jdbcType=VARCHAR},
      </if>
      <if test="record.glassCategory != null" >
        glass_category = #{record.glassCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.seatNum != null" >
        seat_num = #{record.seatNum,jdbcType=INTEGER},
      </if>
      <if test="record.compensateDay != null" >
        compensate_day = #{record.compensateDay,jdbcType=INTEGER},
      </if>
      <if test="record.compensateMoeny != null" >
        compensate_moeny = #{record.compensateMoeny,jdbcType=DOUBLE},
      </if>
      <if test="record.chineseOther != null" >
        chinese_other = #{record.chineseOther,jdbcType=INTEGER},
      </if>
      <if test="record.repairNum != null" >
        repair_num = #{record.repairNum,jdbcType=DOUBLE},
      </if>
      <if test="record.nSeqNo != null" >
        n_seq_no = #{record.nSeqNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_risk
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      risk_code = #{record.riskCode,jdbcType=VARCHAR},
      risk_name = #{record.riskName,jdbcType=VARCHAR},
      insurance_amount = #{record.insuranceAmount,jdbcType=DOUBLE},
      insurance_money = #{record.insuranceMoney,jdbcType=DOUBLE},
      glass_code = #{record.glassCode,jdbcType=VARCHAR},
      glass_category = #{record.glassCategory,jdbcType=VARCHAR},
      seat_num = #{record.seatNum,jdbcType=INTEGER},
      compensate_day = #{record.compensateDay,jdbcType=INTEGER},
      compensate_moeny = #{record.compensateMoeny,jdbcType=DOUBLE},
      chinese_other = #{record.chineseOther,jdbcType=INTEGER},
      repair_num = #{record.repairNum,jdbcType=DOUBLE},
      n_seq_no = #{record.nSeqNo,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.songzhi.carInsure.web.po.TRisk" >
    update t_risk
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="riskCode != null" >
        risk_code = #{riskCode,jdbcType=VARCHAR},
      </if>
      <if test="riskName != null" >
        risk_name = #{riskName,jdbcType=VARCHAR},
      </if>
      <if test="insuranceAmount != null" >
        insurance_amount = #{insuranceAmount,jdbcType=DOUBLE},
      </if>
      <if test="insuranceMoney != null" >
        insurance_money = #{insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="glassCode != null" >
        glass_code = #{glassCode,jdbcType=VARCHAR},
      </if>
      <if test="glassCategory != null" >
        glass_category = #{glassCategory,jdbcType=VARCHAR},
      </if>
      <if test="seatNum != null" >
        seat_num = #{seatNum,jdbcType=INTEGER},
      </if>
      <if test="compensateDay != null" >
        compensate_day = #{compensateDay,jdbcType=INTEGER},
      </if>
      <if test="compensateMoeny != null" >
        compensate_moeny = #{compensateMoeny,jdbcType=DOUBLE},
      </if>
      <if test="chineseOther != null" >
        chinese_other = #{chineseOther,jdbcType=INTEGER},
      </if>
      <if test="repairNum != null" >
        repair_num = #{repairNum,jdbcType=DOUBLE},
      </if>
      <if test="nSeqNo != null" >
        n_seq_no = #{nSeqNo,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.songzhi.carInsure.web.po.TRisk" >
    update t_risk
    set order_id = #{orderId,jdbcType=INTEGER},
      risk_code = #{riskCode,jdbcType=VARCHAR},
      risk_name = #{riskName,jdbcType=VARCHAR},
      insurance_amount = #{insuranceAmount,jdbcType=DOUBLE},
      insurance_money = #{insuranceMoney,jdbcType=DOUBLE},
      glass_code = #{glassCode,jdbcType=VARCHAR},
      glass_category = #{glassCategory,jdbcType=VARCHAR},
      seat_num = #{seatNum,jdbcType=INTEGER},
      compensate_day = #{compensateDay,jdbcType=INTEGER},
      compensate_moeny = #{compensateMoeny,jdbcType=DOUBLE},
      chinese_other = #{chineseOther,jdbcType=INTEGER},
      repair_num = #{repairNum,jdbcType=DOUBLE},
      n_seq_no = #{nSeqNo,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>